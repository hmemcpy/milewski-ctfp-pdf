name: Release PDFs

on:
    push:
        tags:
            - "**"

jobs:
    determine-matrix:
        name: Figure out the assets we need to build
        runs-on: ubuntu-latest

        outputs:
            matrix: ${{ steps.set-matrix.outputs.matrix }}

        steps:
            - name: Set up Git repository
              uses: actions/checkout@v3

            - name: Install the Nix package manager
              uses: cachix/install-nix-action@v20

            - id: set-matrix
              run: |
                  echo "matrix=$(
                    nix eval --json .#packages.x86_64-linux --apply builtins.attrNames
                  )" >> $GITHUB_OUTPUT

    build:
        name: Build documents
        needs: determine-matrix
        runs-on: ubuntu-latest
        strategy:
            matrix:
                packages: ${{fromJson(needs.determine-matrix.outputs.matrix)}}

        steps:
            - name: Set up Git repository
              uses: actions/checkout@v3

            - name: Install Nix
              uses: cachix/install-nix-action@v20

            - name: Build ${{ matrix.packages }}.pdf
              run: |
                  nix build .#${{ matrix.packages }}
                  mkdir -p out
                  cp -ar ./result/* out/

            - name: Upload build assets (${{ matrix.packages }}.pdf)
              uses: actions/upload-artifact@v2
              with:
                  name: ctfp
                  path: out/*

    release:
        name: "Create Github pre-release"
        runs-on: ubuntu-latest
        needs: [build]
        outputs:
            upload_url: ${{ steps.create_release.outputs.upload_url }}
        steps:
            - name: Create Github pre-release (${{ github.ref }})
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ github.ref }}
                  release_name: ${{ github.ref }}
                  draft: true

    assets:
        name: Upload release assets
        runs-on: ubuntu-latest
        needs: [determine-matrix, release]
        strategy:
            matrix:
                packages: ${{fromJson(needs.determine-matrix.outputs.matrix)}}

        steps:
            - name: Download build assets (${{ matrix.packages }}.pdf)
              uses: actions/download-artifact@v4.1.7
              with:
                  name: ctfp
                  path: ctfp

            - name:
                  Upload release assets (${{ matrix.packages }}--${{ github.ref
                  }}.pdf)
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ needs.release.outputs.upload_url }}
                  asset_path: ctfp/${{ matrix.packages }}.pdf
                  asset_name: ${{ matrix.packages }}--${{ github.ref }}.pdf
                  asset_content_type: application/pdf
